# Redis 基本数据类型

## 字符串

字符串是redis的最基本的类型，一个Key对应一个Value

string类型是二进制安全的。意思是redis的string可以包含任何数据，比如jpg图片或者序列化对象

string类型是redis最基本的数据类型，一个键在最大能存储512m

```
127.0.0.1:6379> set name "chenfan"
OK
127.0.0.1:6379> get name
"chenfan"
127.0.0.1:6379> type name
string

删除键值
127.0.0.1:6379> DEL name
(integer) 1
127.0.0.1:6379> get name
(nil)

```

name和chenfan是存储在redis的键和字符串值

## Hash哈希

redis hash是一个键值对集合

redis hash 是一个string类型的field和value的映射表

```
127.0.0.1:6379> HMSET my_hash_table username chenfan age 27 sex male
OK
127.0.0.1:6379> HGETALL my_hash_table
1) "username"
2) "chenfan"
3) "age"
4) "27"
5) "sex"
6) "male"
```

## List列表

redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部(左边)或尾部(右边)

```
127.0.0.1:6379> LPUSH tutorial_list redis
(integer) 1
127.0.0.1:6379> LPUSH tutorial_list mongodb
(integer) 2
127.0.0.1:6379> LPUSH tutorial_list rabbitmq
(integer) 3
127.0.0.1:6379> 
127.0.0.1:6379> 
127.0.0.1:6379> LRANGE tutorial_list 0 10
1) "rabbitmq"
2) "mongodb"
3) "redis"

```

## set 集合

redis set是string类型的无序集合

集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是0（1）

```
127.0.0.1:6379> SADD myset redis
(integer) 1
127.0.0.1:6379> SADD myset mongodb
(integer) 1
127.0.0.1:6379> SADD myset rabbitmq
(integer) 1
127.0.0.1:6379> sadd myset rabbitmq
(integer) 0
127.0.0.1:6379> 
127.0.0.1:6379> 
127.0.0.1:6379> SMEMBERS myset
1) "rabbitmq"
2) "mongodb"
3) "redis"
```

rabbitmq被添加2次，但由于它是只集合具有唯一性

## zset （sorted set:有序集合）

redis zset和set是一样的，也是string类元素的集合，且不允许重复的成员

